name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 23
      uses: actions/setup-java@v3
      with:
        java-version: '23'
        distribution: 'corretto'
        cache: maven
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    
    - name: Run Tests
      run: mvn test
    
    - name: Build and analyze with SonarCloud
      if: github.event_name != 'pull_request'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
    
    - name: Build Docker Image
      if: github.ref == 'refs/heads/main'
      run: |
        docker build -t library-service:${GITHUB_SHA::8} .
    
    - name: Login to Docker Hub
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Push to Docker Hub
      if: github.ref == 'refs/heads/main'
      run: |
        docker tag library-service:${GITHUB_SHA::8} ${{ secrets.DOCKER_HUB_USERNAME }}/library-service:${GITHUB_SHA::8}
        docker tag library-service:${GITHUB_SHA::8} ${{ secrets.DOCKER_HUB_USERNAME }}/library-service:latest
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/library-service:${GITHUB_SHA::8}
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/library-service:latest
    
  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up kubeconfig
      uses: azure/k8s-set-context@v3
      with:
        kubeconfig: ${{ secrets.KUBE_CONFIG }}
    
    - name: Deploy to Kubernetes
      run: |
        # Replace placeholders in deployment.yaml
        sed -i "s|\${DOCKER_IMAGE_NAME}|${{ secrets.DOCKER_HUB_USERNAME }}/library-service|g" k8s/deployment.yaml
        sed -i "s|\${IMAGE_TAG}|${GITHUB_SHA::8}|g" k8s/deployment.yaml
        
        # Apply Kubernetes configurations
        kubectl apply -f k8s/configmap.yaml
        kubectl apply -f k8s/secrets.yaml
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        kubectl apply -f k8s/ingress.yaml